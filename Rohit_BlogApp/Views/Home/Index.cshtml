@model IEnumerable<Rohit_BlogApp.Models.Post>

@{
    ViewData["Title"] = "Home";
    // Context.Session.GetInt32("UserId")

}


@* <div class=" whitespace-nowrap bg-gray-200 p-3 sticky top-0 rounded shadow"> *@
@*     <!-- Moving Text --> *@
@*     <h1 class="text-2xl font-bold mb-2 inline-block  relative "> *@
@*         The Journey : Express your life , Share Your Thoughts and Journey *@
@*     </h1> *@
@* </div> *@


<div class="space-y-6 mt-3">
    @foreach (var post in Model)
    {
        <div class="bg-white shadow-md rounded-lg p-4">
            <!-- Post Header -->
            <div class="flex  space-x-2">
                @if (!string.IsNullOrEmpty(post.User.ProfileUrl))
                {
                    <a href="/Profile/UserProfile/@post.User.Username">
                        <div class="w-14 h-14 rounded-full" style="background: url('@post.User.ProfileUrl') center center / cover no-repeat;"> </div>
                    </a>
                }else{
                     <a href="/Profile/UserProfile/@post.User.Username">
                    <div class="w-14 h-14 rounded-full" style="background: url('/Img//profile-icon.jpg') center center / cover no-repeat; border:2px solid black"></div>
                    </a>
                }
               
                    <div>
                        <h2 class="text-lg font-bold">
                            <a href="/Profile/UserProfile/@post.User.Username">@(post.User != null ? post.User.Username : "Unknown User")</a>
                        </h2>
                        <p class="text-sm text-gray-500">
                            @(post.CreatedAt != null ? post.CreatedAt.ToString("MMM dd, yyyy hh:mm tt") : "No Date")
                        </p>
                    </div>
                 
               
            </div>

            <!-- Post Content -->
            <div class="mt-4">
                <h3 class="text-lg lg:text-xl font-semibold">@post.Title</h3>
                <p id="post-content-1" class="line-clamp-3 max-h-20 overflow-hidden">@post.Content</p>
                <a href="@Url.Action("Post_Detail", "Post", new { title = post.Title.Replace(" ", "-") })" class="text-blue-500 hover:underline text-right">
                    View
                </a>



                @* <button id="view-more-1" style="display: none;" onclick="toggleContent(1)" class="text-blue-500">View More</button> *@
              

                @if (!string.IsNullOrEmpty(post.PostUrl))
                {
                    <img src="@post.PostUrl" alt="Post Image" class="mt-4 w-full rounded-lg">
                }
               
            </div>

            <!-- Like & Comment Section -->
            <div class="mt-4 flex items-center justify-between">
                <div class="flex space-x-4">
                   @*  <button onclick="likePost('@post.Title')" id="like-btn">  *@
                   @*     Likes *@
                   @* </button> *@
                    @* <a href="javascript:void(0);" onclick="likePost('@post.Title')" id="like-button">Likes</a> *@
                    @* <span id="like-count">@post.Likes.Count</span> *@


                    <a href="@Url.Action("Post_Detail", "Post", new { title = post.Title.Replace(" ", "-") })" class="text-blue-500 hover:underline text-right">
                        💬 Comments
                    </a>
                    @* <a href="/Post/Post_Detail/@post.Id" class="text-gray-500 hover:text-blue-500"> *@
                    @*     💬 Comments (<span>@post.Comments?.Count()</span>) *@
                    @* </a> *@
                </div>
            </div>
        </div>
    }
</div>



<style>
    .line-clamp-3 {
        display: -webkit-box;
        -webkit-line-clamp: 3;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }
</style>
<script>
        function likePost(title) {
        fetch(`/Home/Like/${encodeURIComponent(title)}`, { method: 'POST' })
            .then(response => response.json())
            .then(data => {
                if (data.error) {
                    alert(data.error);
                } else {
                    document.getElementById('like-count').innerText = data.likes;
                }
            })
            .catch(error => console.error('Error:', error));
    }
</script>
